@page "/containers"
@using DockerManagement.BlazorServer.Data
@using DockerManagement.BlazorServer.Services
@using System
@inject DockerService DockerService

<h3>Containers</h3>


@if (containerItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Image</th>
                <th>Ports</th>
                <th>Created</th>
                <th>Command</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var container in containerItems)
            {
                string id = container.short_id;

                <tr>
                    <td>@container.short_id</td>
                    <td>@container.name</td>
                    <td>@container.image</td>
                    <td>@string.Join(",", container.ports)</td>
                    <td>@container.created</td>
                    <td>@container.command</td>
                    <td>@container.status</td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick=@(async () => await StopContainerById(id))> Stop </button>
                    </td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick=@(async () => await StartContainerById(id))> Start </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<span>@StopResult</span>

@code {

    private string StopResult = string.Empty;
    private ContainerItemDto[] containerItems;

    protected override async Task OnInitializedAsync()
    {
        containerItems = await DockerService.GetContainers();
    }

    private async Task StopContainerById(string id)
    {
        StopResult = await DockerService.StopContainer(id);
        await OnInitializedAsync();
    }

    private async Task StartContainerById(string id)
    {
        StopResult = await DockerService.StartContainer(id);
        await OnInitializedAsync();
    }
}
